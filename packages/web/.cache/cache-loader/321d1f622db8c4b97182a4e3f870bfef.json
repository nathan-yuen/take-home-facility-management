{"remainingRequest":"/home/nathan/resq/resq/node_modules/ts-loader/index.js??ref--16-1!/home/nathan/resq/resq/packages/web/src/components/FacilityFormDialog.tsx","dependencies":[{"path":"/home/nathan/resq/resq/packages/web/src/components/FacilityFormDialog.tsx","mtime":1593446695683},{"path":"/home/nathan/resq/resq/node_modules/cache-loader/dist/cjs.js","mtime":1593200457581},{"path":"/home/nathan/resq/resq/node_modules/ts-loader/index.js","mtime":1593200459990}],"contextDependencies":[],"result":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useMutation } from '@apollo/react-hooks';\nimport { Button, Collapse, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Grid, InputLabel, LinearProgress, MenuItem, Select, TextField } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport constants from '../constants';\nimport { ADD, UPDATE } from '../queries';\nimport SizeChip from './SizeChip';\nvar useStyles = makeStyles(function (theme) {\n    return createStyles({\n        content: {\n            '& .MuiTextField-root': {\n                display: 'block',\n                minWidth: '500px',\n                margin: theme.spacing(1)\n            },\n            '& .MuiSelect-root': {\n                display: 'block',\n                margin: theme.spacing(1)\n            }\n        },\n        LARGE: {\n            color: constants.SIZES.LARGE\n        },\n        MEDIUM: {\n            color: constants.SIZES.MEDIUM\n        },\n        SMALL: {\n            color: constants.SIZES.SMALL\n        }\n    });\n});\nvar renderSizeValue = function (value) { return React.createElement(SizeChip, { size: value }); };\nexport default function (props) {\n    var classes = useStyles();\n    var open = props.open, facility = props.facility, onClose = props.onClose, onSave = props.onSave;\n    var isEdit = facility !== null;\n    var _a = useState(''), name = _a[0], setName = _a[1];\n    var _b = useState(''), address = _b[0], setAddress = _b[1];\n    var _c = useState(''), size = _c[0], setSize = _c[1];\n    var _d = useState({\n        name: false,\n        address: false,\n        size: false\n    }), fieldsError = _d[0], setFieldsError = _d[1];\n    var _e = useMutation(isEdit ? UPDATE : ADD), saveFacility = _e[0], _f = _e[1], saving = _f.loading, result = _f.data;\n    var _g = useState(null), submitError = _g[0], setSubmitError = _g[1];\n    var onCancelClick = function () {\n        onClose();\n        setName('');\n        setAddress('');\n        setSize('');\n    };\n    var onSaveClick = function () {\n        var fError = __assign({}, fieldsError);\n        fError.name = name === '';\n        fError.address = address === '';\n        fError.size = size === '';\n        setFieldsError(function (e) { return (__assign({}, e, fError)); });\n        if (!Object.values(fError).some(function (e) { return e; })) {\n            saveFacility({\n                variables: {\n                    facility: { id: isEdit ? facility.id : undefined, name: name, address: address, size: size }\n                },\n                refetchQueries: ['listFacilities']\n            }).catch(function (e) {\n                setSubmitError(e);\n                setTimeout(function () { return setSubmitError(null); }, 3000);\n            });\n        }\n    };\n    var sizeMenuItems = useMemo(function () {\n        return Object.keys(constants.SIZES).map(function (s) { return (React.createElement(MenuItem, { key: s, className: classes[s], value: s }, s)); });\n    }, []);\n    useEffect(function () {\n        setName(isEdit ? facility.name : '');\n        setAddress(isEdit ? facility.address : '');\n        setSize(isEdit ? facility.size : '');\n    }, [isEdit]);\n    useEffect(function () {\n        if (result && (result.addFacility || result.updateFacility)) {\n            if (result.addFacility) {\n                onSave(true, result.addFacility);\n            }\n            else if (result.updateFacility) {\n                var _a = result.updateFacility, success = _a.success, updated = _a.updated;\n                onSave(success, updated);\n            }\n        }\n    }, [result]);\n    return (React.createElement(Dialog, { open: open, onClose: onClose, disableBackdropClick: true, disableScrollLock: true, maxWidth: \"md\" },\n        React.createElement(DialogTitle, null,\n            isEdit ? 'Edit' : 'Add',\n            \" Facility\"),\n        React.createElement(DialogContent, null,\n            React.createElement(Grid, { container: true, spacing: 2 },\n                isEdit && (React.createElement(Grid, { item: true, xs: 12 },\n                    React.createElement(TextField, { value: facility.id, disabled: true, fullWidth: true, label: \"ID\", variant: \"outlined\" }))),\n                React.createElement(Grid, { item: true, xs: 12 },\n                    React.createElement(TextField, { value: name, onChange: function (e) { return setName(e.target.value); }, disabled: saving, fullWidth: true, label: \"Name\", variant: \"outlined\", required: true, error: fieldsError.name })),\n                React.createElement(Grid, { item: true, xs: 12 },\n                    React.createElement(TextField, { value: address, onChange: function (e) { return setAddress(e.target.value); }, disabled: saving, fullWidth: true, label: \"Address\", variant: \"outlined\", required: true, error: fieldsError.address })),\n                React.createElement(Grid, { item: true, xs: 12 },\n                    React.createElement(FormControl, { disabled: saving, fullWidth: true, variant: \"outlined\", required: true, error: fieldsError.size },\n                        React.createElement(InputLabel, { id: \"demo-simple-select-outlined-label\" }, \"Size\"),\n                        React.createElement(Select, { id: \"input-size\", label: \"Size\", value: size, onChange: function (e) { return setSize(e.target.value); }, renderValue: renderSizeValue }, sizeMenuItems))))),\n        saving && React.createElement(LinearProgress, { color: \"secondary\" }),\n        React.createElement(Collapse, { in: submitError !== null },\n            React.createElement(Alert, { severity: \"error\", onClose: function () { return setSubmitError(null); } },\n                React.createElement(AlertTitle, null, \"Something went wrong!\"),\n                submitError && submitError.message)),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { disabled: saving, onClick: onCancelClick, variant: \"outlined\", color: \"secondary\" }, \"Cancel\"),\n            React.createElement(Button, { disabled: saving, onClick: onSaveClick, variant: \"contained\", color: \"primary\" }, \"Save\"))));\n}\n",{"version":3,"file":"/home/nathan/resq/resq/packages/web/src/components/FacilityFormDialog.tsx","sourceRoot":"","sources":["/home/nathan/resq/resq/packages/web/src/components/FacilityFormDialog.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EACL,MAAM,EACN,QAAQ,EACR,MAAM,EACN,aAAa,EACb,aAAa,EACb,WAAW,EACX,WAAW,EACX,IAAI,EACJ,UAAU,EACV,cAAc,EACd,QAAQ,EACR,MAAM,EACN,SAAS,EACV,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAE,YAAY,EAAE,UAAU,EAAS,MAAM,0BAA0B,CAAC;AAC3E,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AACrD,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE5D,OAAO,SAAS,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AACzC,OAAO,QAAQ,MAAM,YAAY,CAAC;AASlC,IAAM,SAAS,GAAG,UAAU,CAAC,UAAC,KAAY;IACxC,OAAA,YAAY,CAAC;QACX,OAAO,EAAE;YACP,sBAAsB,EAAE;gBACtB,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,OAAO;gBACjB,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;aACzB;YACD,mBAAmB,EAAE;gBACnB,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;aACzB;SACF;QACD,KAAK,EAAE;YACL,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,KAAK;SAC7B;QACD,MAAM,EAAE;YACN,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM;SAC9B;QACD,KAAK,EAAE;YACL,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,KAAK;SAC7B;KACF,CAAC;AArBF,CAqBE,CACH,CAAC;AAEF,IAAM,eAAe,GAAG,UAAC,KAAa,IAAK,OAAA,oBAAC,QAAQ,IAAC,IAAI,EAAE,KAAK,GAAI,EAAzB,CAAyB,CAAC;AAErE,MAAM,CAAC,OAAO,WAAU,KAAY;IAClC,IAAM,OAAO,GAAG,SAAS,EAAE,CAAC;IACpB,IAAA,iBAAI,EAAE,yBAAQ,EAAE,uBAAO,EAAE,qBAAM,CAAW;IAClD,IAAM,MAAM,GAAG,QAAQ,KAAK,IAAI,CAAC;IAE3B,IAAA,iBAA8B,EAA7B,YAAI,EAAE,eAAuB,CAAC;IAC/B,IAAA,iBAAoC,EAAnC,eAAO,EAAE,kBAA0B,CAAC;IACrC,IAAA,iBAA8B,EAA7B,YAAI,EAAE,eAAuB,CAAC;IAC/B,IAAA;;;;MAIJ,EAJK,mBAAW,EAAE,sBAIlB,CAAC;IAEG,IAAA,uCAAsF,EAArF,oBAAY,EAAE,UAAiC,EAA/B,mBAAe,EAAE,gBAAoD,CAAC;IACvF,IAAA,mBAA8C,EAA7C,mBAAW,EAAE,sBAAgC,CAAC;IAErD,IAAM,aAAa,GAAG;QACpB,OAAO,EAAE,CAAC;QACV,OAAO,CAAC,EAAE,CAAC,CAAC;QACZ,UAAU,CAAC,EAAE,CAAC,CAAC;QACf,OAAO,CAAC,EAAE,CAAC,CAAC;IACd,CAAC,CAAC;IAEF,IAAM,WAAW,GAAG;QAClB,IAAM,MAAM,gBAAQ,WAAW,CAAE,CAAC;QAClC,MAAM,CAAC,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;QAC1B,MAAM,CAAC,OAAO,GAAG,OAAO,KAAK,EAAE,CAAC;QAChC,MAAM,CAAC,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;QAC1B,cAAc,CAAC,UAAA,CAAC,IAAI,OAAA,cAAM,CAAC,EAAK,MAAM,EAAG,EAArB,CAAqB,CAAC,CAAC;QAE3C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,CAAU,IAAK,OAAA,CAAC,EAAD,CAAC,CAAC,EAAE;YAClD,YAAY,CAAC;gBACX,SAAS,EAAE;oBACT,QAAQ,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,MAAA,EAAE,OAAO,SAAA,EAAE,IAAI,MAAA,EAAE;iBACxE;gBACD,cAAc,EAAE,CAAC,gBAAgB,CAAC;aACnC,CAAC,CAAC,KAAK,CAAC,UAAA,CAAC;gBACR,cAAc,CAAC,CAAC,CAAC,CAAC;gBAClB,UAAU,CAAC,cAAM,OAAA,cAAc,CAAC,IAAI,CAAC,EAApB,CAAoB,EAAE,IAAI,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;SACJ;IACH,CAAC,CAAC;IAEF,IAAM,aAAa,GAAG,OAAO,CAC3B;QACE,OAAA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAC,CAAS,IAAK,OAAA,CAC9C,oBAAC,QAAQ,IAAC,GAAG,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,IAC9C,CAAC,CACO,CACZ,EAJ+C,CAI/C,CAAC;IAJF,CAIE,EACJ,EAAE,CACH,CAAC;IAEF,SAAS,CAAC;QACR,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACrC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC3C,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACvC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAEb,SAAS,CAAC;QACR,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,cAAc,CAAC,EAAE;YAC3D,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;aAClC;iBAAM,IAAI,MAAM,CAAC,cAAc,EAAE;gBAC1B,IAAA,0BAA4C,EAA1C,oBAAO,EAAE,oBAAiC,CAAC;gBACnD,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aAC1B;SACF;IACH,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAEb,OAAO,CACL,oBAAC,MAAM,IAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,oBAAoB,QAAC,iBAAiB,QAAC,QAAQ,EAAC,IAAI;QACxF,oBAAC,WAAW;YAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;wBAAwB;QAC7D,oBAAC,aAAa;YACZ,oBAAC,IAAI,IAAC,SAAS,QAAC,OAAO,EAAE,CAAC;gBACvB,MAAM,IAAI,CACT,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE;oBACf,oBAAC,SAAS,IAAC,KAAK,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,QAAC,SAAS,QAAC,KAAK,EAAC,IAAI,EAAC,OAAO,EAAC,UAAU,GAAG,CAC7E,CACR;gBACD,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE;oBACf,oBAAC,SAAS,IACR,KAAK,EAAE,IAAI,EACX,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAvB,CAAuB,EACtC,QAAQ,EAAE,MAAM,EAChB,SAAS,QACT,KAAK,EAAC,MAAM,EACZ,OAAO,EAAC,UAAU,EAClB,QAAQ,QACR,KAAK,EAAE,WAAW,CAAC,IAAI,GACvB,CACG;gBACP,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE;oBACf,oBAAC,SAAS,IACR,KAAK,EAAE,OAAO,EACd,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAA1B,CAA0B,EACzC,QAAQ,EAAE,MAAM,EAChB,SAAS,QACT,KAAK,EAAC,SAAS,EACf,OAAO,EAAC,UAAU,EAClB,QAAQ,QACR,KAAK,EAAE,WAAW,CAAC,OAAO,GAC1B,CACG;gBACP,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE;oBACf,oBAAC,WAAW,IAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,QAAC,OAAO,EAAC,UAAU,EAAC,QAAQ,QAAC,KAAK,EAAE,WAAW,CAAC,IAAI;wBAC1F,oBAAC,UAAU,IAAC,EAAE,EAAC,mCAAmC,WAAkB;wBACpE,oBAAC,MAAM,IACL,EAAE,EAAC,YAAY,EACf,KAAK,EAAC,MAAM,EACZ,KAAK,EAAE,IAAI,EACX,QAAQ,EAAE,UAAC,CAAuC,IAAK,OAAA,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAvB,CAAuB,EAC9E,WAAW,EAAE,eAAe,IAE3B,aAAa,CACP,CACG,CACT,CACF,CACO;QACf,MAAM,IAAI,oBAAC,cAAc,IAAC,KAAK,EAAC,WAAW,GAAG;QAC/C,oBAAC,QAAQ,IAAC,EAAE,EAAE,WAAW,KAAK,IAAI;YAChC,oBAAC,KAAK,IAAC,QAAQ,EAAC,OAAO,EAAC,OAAO,EAAE,cAAM,OAAA,cAAc,CAAC,IAAI,CAAC,EAApB,CAAoB;gBACzD,oBAAC,UAAU,gCAAmC;gBAC7C,WAAW,IAAI,WAAW,CAAC,OAAO,CAC7B,CACC;QACX,oBAAC,aAAa;YACZ,oBAAC,MAAM,IAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,OAAO,EAAC,UAAU,EAAC,KAAK,EAAC,WAAW,aAE7E;YACT,oBAAC,MAAM,IAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAC,WAAW,EAAC,KAAK,EAAC,SAAS,WAE1E,CACK,CACT,CACV,CAAC;AACJ,CAAC","sourcesContent":["import { useMutation } from '@apollo/react-hooks';\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  LinearProgress,\r\n  MenuItem,\r\n  Select,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport Facility from '../../typings/Facility';\r\nimport constants from '../constants';\r\nimport { ADD, UPDATE } from '../queries';\r\nimport SizeChip from './SizeChip';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  facility?: Facility;\r\n  onClose: () => void;\r\n  onSave: (success: boolean, facility: Facility) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    content: {\r\n      '& .MuiTextField-root': {\r\n        display: 'block',\r\n        minWidth: '500px',\r\n        margin: theme.spacing(1)\r\n      },\r\n      '& .MuiSelect-root': {\r\n        display: 'block',\r\n        margin: theme.spacing(1)\r\n      }\r\n    },\r\n    LARGE: {\r\n      color: constants.SIZES.LARGE\r\n    },\r\n    MEDIUM: {\r\n      color: constants.SIZES.MEDIUM\r\n    },\r\n    SMALL: {\r\n      color: constants.SIZES.SMALL\r\n    }\r\n  })\r\n);\r\n\r\nconst renderSizeValue = (value: string) => <SizeChip size={value} />;\r\n\r\nexport default function(props: Props) {\r\n  const classes = useStyles();\r\n  const { open, facility, onClose, onSave } = props;\r\n  const isEdit = facility !== null;\r\n\r\n  const [name, setName] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [fieldsError, setFieldsError] = useState({\r\n    name: false,\r\n    address: false,\r\n    size: false\r\n  });\r\n\r\n  const [saveFacility, { loading: saving, data: result }] = useMutation(isEdit ? UPDATE : ADD);\r\n  const [submitError, setSubmitError] = useState(null);\r\n\r\n  const onCancelClick = () => {\r\n    onClose();\r\n    setName('');\r\n    setAddress('');\r\n    setSize('');\r\n  };\r\n\r\n  const onSaveClick = () => {\r\n    const fError = { ...fieldsError };\r\n    fError.name = name === '';\r\n    fError.address = address === '';\r\n    fError.size = size === '';\r\n    setFieldsError(e => ({ ...e, ...fError }));\r\n\r\n    if (!Object.values(fError).some((e: boolean) => e)) {\r\n      saveFacility({\r\n        variables: {\r\n          facility: { id: isEdit ? facility.id : undefined, name, address, size }\r\n        },\r\n        refetchQueries: ['listFacilities']\r\n      }).catch(e => {\r\n        setSubmitError(e);\r\n        setTimeout(() => setSubmitError(null), 3000);\r\n      });\r\n    }\r\n  };\r\n\r\n  const sizeMenuItems = useMemo(\r\n    () =>\r\n      Object.keys(constants.SIZES).map((s: string) => (\r\n        <MenuItem key={s} className={classes[s]} value={s}>\r\n          {s}\r\n        </MenuItem>\r\n      )),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    setName(isEdit ? facility.name : '');\r\n    setAddress(isEdit ? facility.address : '');\r\n    setSize(isEdit ? facility.size : '');\r\n  }, [isEdit]);\r\n\r\n  useEffect(() => {\r\n    if (result && (result.addFacility || result.updateFacility)) {\r\n      if (result.addFacility) {\r\n        onSave(true, result.addFacility);\r\n      } else if (result.updateFacility) {\r\n        const { success, updated } = result.updateFacility;\r\n        onSave(success, updated);\r\n      }\r\n    }\r\n  }, [result]);\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} disableBackdropClick disableScrollLock maxWidth=\"md\">\r\n      <DialogTitle>{isEdit ? 'Edit' : 'Add'} Facility</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          {isEdit && (\r\n            <Grid item xs={12}>\r\n              <TextField value={facility.id} disabled fullWidth label=\"ID\" variant=\"outlined\" />\r\n            </Grid>\r\n          )}\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n              disabled={saving}\r\n              fullWidth\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              required\r\n              error={fieldsError.name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              value={address}\r\n              onChange={e => setAddress(e.target.value)}\r\n              disabled={saving}\r\n              fullWidth\r\n              label=\"Address\"\r\n              variant=\"outlined\"\r\n              required\r\n              error={fieldsError.address}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl disabled={saving} fullWidth variant=\"outlined\" required error={fieldsError.size}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">Size</InputLabel>\r\n              <Select\r\n                id=\"input-size\"\r\n                label=\"Size\"\r\n                value={size}\r\n                onChange={(e: React.ChangeEvent<{ value: string }>) => setSize(e.target.value)}\r\n                renderValue={renderSizeValue}\r\n              >\r\n                {sizeMenuItems}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      {saving && <LinearProgress color=\"secondary\" />}\r\n      <Collapse in={submitError !== null}>\r\n        <Alert severity=\"error\" onClose={() => setSubmitError(null)}>\r\n          <AlertTitle>Something went wrong!</AlertTitle>\r\n          {submitError && submitError.message}\r\n        </Alert>\r\n      </Collapse>\r\n      <DialogActions>\r\n        <Button disabled={saving} onClick={onCancelClick} variant=\"outlined\" color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n        <Button disabled={saving} onClick={onSaveClick} variant=\"contained\" color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n"]}]}