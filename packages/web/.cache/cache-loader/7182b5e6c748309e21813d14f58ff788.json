{"remainingRequest":"/home/nathan/resq/resq/node_modules/ts-loader/index.js??ref--16-1!/home/nathan/resq/resq/packages/web/src/components/FacilitiesPage.tsx","dependencies":[{"path":"/home/nathan/resq/resq/packages/web/src/components/FacilitiesPage.tsx","mtime":1593446332270},{"path":"/home/nathan/resq/resq/node_modules/cache-loader/dist/cjs.js","mtime":1593200457581},{"path":"/home/nathan/resq/resq/node_modules/ts-loader/index.js","mtime":1593200459990}],"contextDependencies":[],"result":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useMutation } from '@apollo/react-hooks';\nimport { Button, CircularProgress, createStyles, Dialog, DialogActions, DialogContent, DialogTitle, Fab, makeStyles, Snackbar } from '@material-ui/core';\nimport { AddCircle } from '@material-ui/icons';\nimport { Alert } from '@material-ui/lab';\nimport React, { useCallback, useState } from 'react';\nimport { REMOVE } from '../queries';\nimport FacilitiyFormDialog from './FacilityFormDialog';\nimport FacilityList from './FacilityList';\nvar useStyles = makeStyles(function (theme) {\n    return createStyles({\n        fab: {\n            position: 'fixed',\n            bottom: theme.spacing(4),\n            right: theme.spacing(4)\n        },\n        fabIcon: {\n            marginRight: theme.spacing(1)\n        }\n    });\n});\nexport default function () {\n    var classes = useStyles();\n    var _a = useMutation(REMOVE), remove = _a[0], removeLoading = _a[1].loading;\n    var _b = useState(false), removalSuccess = _b[0], setRemovalSuccess = _b[1];\n    var _c = useState(false), isCreate = _c[0], setIsCreate = _c[1];\n    var _d = useState(null), toEdit = _d[0], setToEdit = _d[1];\n    var _e = useState(null), toRemove = _e[0], setToRemove = _e[1];\n    var _f = useState({ show: false, success: false, message: '' }), result = _f[0], setResult = _f[1];\n    var onRemoveCancel = function () { return setToRemove(null); };\n    var onRemoveConfirm = useCallback(function () {\n        remove({\n            variables: { id: toRemove.id },\n            refetchQueries: ['listFacilities'],\n            optimisticResponse: {}\n        }).then(function (result) {\n            if (result.data && result.data.removeFacility) {\n                setRemovalSuccess(result.data.removeFacility);\n                if (result.data.removeFacility) {\n                    setToRemove(null);\n                    setTimeout(function () { return setRemovalSuccess(false); }, 300);\n                }\n            }\n        });\n    }, [toRemove]);\n    var onFormDailogClose = function () {\n        setIsCreate(null);\n        setToEdit(null);\n    };\n    var onSave = function (success, facility) {\n        if (success) {\n            setIsCreate(null);\n            setToEdit(null);\n        }\n        var message;\n        if (isCreate) {\n            message = success ? \"Facility: \" + facility.name + \" was successfully added!\" : \"Unable to add facility!\";\n        }\n        else {\n            message = success\n                ? \"Facility: \" + facility.name + \" was successfully updated!\"\n                : \"Unable to update facility: \" + facility.name + \"!\";\n        }\n        setResult({\n            show: true,\n            success: success,\n            message: message\n        });\n    };\n    var onMessageDismiss = function () { return setResult(function (re) { return (__assign({}, re, { show: false })); }); };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(FacilityList, { onEditFacility: function (f) {\n                console.log(f);\n                setToEdit(f);\n            }, onRemoveFacility: function (f) { return setToRemove(f); } }),\n        React.createElement(Fab, { color: \"primary\", variant: \"extended\", onClick: function () { return setIsCreate(true); }, className: classes.fab },\n            React.createElement(AddCircle, { className: classes.fabIcon }),\n            \"Add Facility\"),\n        React.createElement(FacilitiyFormDialog, { open: isCreate || toEdit !== null, facility: toEdit, onClose: onFormDailogClose, onSave: onSave }),\n        React.createElement(Dialog, { open: toRemove !== null, onClose: onRemoveCancel, disableBackdropClick: true },\n            React.createElement(DialogTitle, null, removeLoading ? 'Removing...' : 'Remove'),\n            React.createElement(DialogContent, null,\n                !removeLoading && !removalSuccess && React.createElement(React.Fragment, null,\n                    \"Are you sure to remove facility - \",\n                    toRemove && toRemove.name,\n                    \"?\"),\n                (removeLoading || removalSuccess) && React.createElement(CircularProgress, { color: \"secondary\", size: 48 })),\n            !removeLoading && !removalSuccess && (React.createElement(DialogActions, null,\n                React.createElement(Button, { onClick: onRemoveCancel, color: \"secondary\", disabled: removeLoading }, \"Cancel\"),\n                React.createElement(Button, { onClick: onRemoveConfirm, color: \"primary\", disabled: removeLoading, variant: \"contained\", autoFocus: true }, \"Confirm\")))),\n        React.createElement(Snackbar, { open: result.show, autoHideDuration: 3000, onClose: onMessageDismiss },\n            React.createElement(Alert, { onClose: onMessageDismiss, severity: result.success ? 'success' : 'error' }, result && result.message))));\n}\n",{"version":3,"file":"/home/nathan/resq/resq/packages/web/src/components/FacilitiesPage.tsx","sourceRoot":"","sources":["/home/nathan/resq/resq/packages/web/src/components/FacilitiesPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/react-hooks';\r\nimport {\r\n  Button,\r\n  Chip,\r\n  CircularProgress,\r\n  Container,\r\n  createStyles,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Fab,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Snackbar,\r\n  TextField,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport { AddCircle } from '@material-ui/icons';\r\nimport { Alert } from '@material-ui/lab';\r\nimport React, { ReactElement, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport Facility from '../../typings/Facility';\r\nimport { REMOVE } from '../queries';\r\nimport FacilitiyFormDialog from './FacilityFormDialog';\r\nimport FacilityList from './FacilityList';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(4),\r\n      right: theme.spacing(4)\r\n    },\r\n    fabIcon: {\r\n      marginRight: theme.spacing(1)\r\n    }\r\n  })\r\n);\r\n\r\nexport default function() {\r\n  const classes = useStyles();\r\n\r\n  const [remove, { loading: removeLoading }] = useMutation(REMOVE);\r\n  const [removalSuccess, setRemovalSuccess] = useState(false);\r\n\r\n  const [isCreate, setIsCreate] = useState(false);\r\n  const [toEdit, setToEdit] = useState(null);\r\n  const [toRemove, setToRemove] = useState(null);\r\n\r\n  const [result, setResult] = useState({ show: false, success: false, message: '' });\r\n\r\n  const onRemoveCancel = () => setToRemove(null);\r\n\r\n  const onRemoveConfirm = useCallback(() => {\r\n    remove({\r\n      variables: { id: toRemove.id },\r\n      refetchQueries: ['listFacilities'],\r\n      optimisticResponse: {}\r\n    }).then(result => {\r\n      if (result.data && result.data.removeFacility) {\r\n        setRemovalSuccess(result.data.removeFacility);\r\n        if (result.data.removeFacility) {\r\n          setToRemove(null);\r\n          setTimeout(() => setRemovalSuccess(false), 300);\r\n        }\r\n      }\r\n    });\r\n  }, [toRemove]);\r\n\r\n  const onFormDailogClose = () => {\r\n    setIsCreate(null);\r\n    setToEdit(null);\r\n  };\r\n\r\n  const onSave = (success: boolean, facility: Facility) => {\r\n    if (success) {\r\n      setIsCreate(null);\r\n      setToEdit(null);\r\n    }\r\n    let message;\r\n\r\n    if (isCreate) {\r\n      message = success ? `Facility: ${facility.name} was successfully added!` : `Unable to add facility!`;\r\n    } else {\r\n      message = success\r\n        ? `Facility: ${facility.name} was successfully updated!`\r\n        : `Unable to update facility: ${facility.name}!`;\r\n    }\r\n\r\n    setResult({\r\n      show: true,\r\n      success,\r\n      message\r\n    });\r\n  };\r\n\r\n  const onMessageDismiss = () => setResult(re => ({ ...re, show: false }));\r\n\r\n  return (\r\n    <>\r\n      <FacilityList\r\n        onEditFacility={f => {\r\n          console.log(f);\r\n          setToEdit(f);\r\n        }}\r\n        onRemoveFacility={f => setToRemove(f)}\r\n      />\r\n      <Fab color=\"primary\" variant=\"extended\" onClick={() => setIsCreate(true)} className={classes.fab}>\r\n        <AddCircle className={classes.fabIcon} />\r\n        Add Facility\r\n      </Fab>\r\n      <FacilitiyFormDialog\r\n        open={isCreate || toEdit !== null}\r\n        facility={toEdit}\r\n        onClose={onFormDailogClose}\r\n        onSave={onSave}\r\n      />\r\n      <Dialog open={toRemove !== null} onClose={onRemoveCancel} disableBackdropClick>\r\n        <DialogTitle>{removeLoading ? 'Removing...' : 'Remove'}</DialogTitle>\r\n        <DialogContent>\r\n          {!removeLoading && !removalSuccess && <>Are you sure to remove facility - {toRemove && toRemove.name}?</>}\r\n          {(removeLoading || removalSuccess) && <CircularProgress color=\"secondary\" size={48} />}\r\n        </DialogContent>\r\n        {!removeLoading && !removalSuccess && (\r\n          <DialogActions>\r\n            <Button onClick={onRemoveCancel} color=\"secondary\" disabled={removeLoading}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={onRemoveConfirm} color=\"primary\" disabled={removeLoading} variant=\"contained\" autoFocus>\r\n              Confirm\r\n            </Button>\r\n          </DialogActions>\r\n        )}\r\n      </Dialog>\r\n      <Snackbar open={result.show} autoHideDuration={3000} onClose={onMessageDismiss}>\r\n        <Alert onClose={onMessageDismiss} severity={result.success ? 'success' : 'error'}>\r\n          {result && result.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n"]}]}