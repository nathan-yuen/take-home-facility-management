{"remainingRequest":"/home/nathan/resq/resq/node_modules/ts-loader/index.js??ref--16-1!/home/nathan/resq/resq/packages/web/src/components/FacilityList.tsx","dependencies":[{"path":"/home/nathan/resq/resq/packages/web/src/components/FacilityList.tsx","mtime":1593447886409},{"path":"/home/nathan/resq/resq/node_modules/cache-loader/dist/cjs.js","mtime":1593200457581},{"path":"/home/nathan/resq/resq/node_modules/ts-loader/index.js","mtime":1593200459990}],"contextDependencies":[],"result":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createStyles, Grid, makeStyles, TextField } from '@material-ui/core';\nimport { Autocomplete, Pagination } from '@material-ui/lab';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Query } from 'react-apollo';\nimport constants from '../constants';\nimport useDebounce from '../hooks/useDebounce';\nimport usePrevious from '../hooks/usePrevious';\nimport { LIST_FACILITIES } from '../queries';\nimport FacilityCard from './FacilityCard';\nimport LoadingGrid from './LoadingGrid';\nimport SizeChip from './SizeChip';\nvar useStyles = makeStyles(function (theme) {\n    return createStyles({\n        searchSection: {\n            marginTop: theme.spacing(1),\n            marginBottom: theme.spacing(2)\n        },\n        searchBox: {\n            flexGrow: 1\n        },\n        footer: {\n            padding: theme.spacing(2)\n        }\n    });\n});\nvar renderSizeFilterInput = function (params) { return React.createElement(TextField, __assign({}, params, { label: \"Filter by size\" })); };\nvar renderSizeFilterValue = function (selected, getTagProps) {\n    return selected.map(function (size, index) { return React.createElement(SizeChip, __assign({}, getTagProps({ index: index }), { size: size })); });\n};\nexport default function (props) {\n    var classes = useStyles();\n    var onEditFacility = props.onEditFacility, onRemoveFacility = props.onRemoveFacility;\n    var _a = useState(1), page = _a[0], setPage = _a[1];\n    var limit = useState(21)[0];\n    var _b = useState(''), searchFilter = _b[0], setSearchFilter = _b[1];\n    var dSearchFilter = useDebounce(searchFilter, 300);\n    var prevSearchFilter = usePrevious(dSearchFilter);\n    var _c = useState([]), sizeFilter = _c[0], setSizeFilter = _c[1];\n    var prevSizeFilter = usePrevious(sizeFilter);\n    var onPageChange = function (event, pageNum) {\n        setPage(pageNum);\n    };\n    var onSearchChange = useCallback(function (event) { return setSearchFilter(event.target.value); }, [setSearchFilter]);\n    var onSizeFilterChange = function (_, value) {\n        setSizeFilter(value);\n    };\n    var filterTextRegex = useMemo(function () { return (dSearchFilter ? new RegExp(dSearchFilter, 'i') : null); }, [dSearchFilter]);\n    useEffect(function () {\n        if (dSearchFilter !== prevSearchFilter || sizeFilter !== prevSizeFilter) {\n            setPage(1);\n        }\n    }, [dSearchFilter, sizeFilter]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Grid, { className: classes.searchSection, spacing: 3, container: true, justify: \"space-between\", alignItems: \"flex-end\" },\n            React.createElement(Grid, { item: true, className: classes.searchBox },\n                React.createElement(TextField, { fullWidth: true, label: \"Search\", value: searchFilter, onChange: onSearchChange })),\n            React.createElement(Grid, { item: true, xs: 12, md: 6, lg: 4 },\n                React.createElement(Autocomplete, { multiple: true, value: sizeFilter, options: Object.keys(constants.SIZES), filterSelectedOptions: true, renderTags: renderSizeFilterValue, renderInput: renderSizeFilterInput, onChange: onSizeFilterChange }))),\n        React.createElement(Query, { query: LIST_FACILITIES, fetchPolicy: \"network-only\", variables: { filter: dSearchFilter, sizeFilter: sizeFilter, limit: limit, offset: (page - 1) * limit } }, function (_a) {\n            var loading = _a.loading, data = _a.data;\n            var content;\n            var footer;\n            window.scrollTo(0, 0);\n            if (loading) {\n                content = React.createElement(LoadingGrid, { count: limit });\n            }\n            else if (data && data.facilities) {\n                var _b = data.facilities, items = _b.items, total = _b.total;\n                var pageCount = Math.round(total / limit);\n                content = items.map(function (facility) { return (React.createElement(Grid, { item: true, lg: 4, sm: 6, xs: 12, key: facility.id },\n                    React.createElement(FacilityCard, { filterTextRegex: filterTextRegex, facility: facility, onEdit: onEditFacility, onRemove: onRemoveFacility }))); });\n                footer = (React.createElement(Grid, { container: true, className: classes.footer, justify: \"center\" },\n                    React.createElement(Pagination, { count: pageCount, page: page, onChange: onPageChange })));\n            }\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Grid, { container: true, spacing: 3 }, content),\n                footer));\n        })));\n}\n",{"version":3,"file":"/home/nathan/resq/resq/packages/web/src/components/FacilityList.tsx","sourceRoot":"","sources":["/home/nathan/resq/resq/packages/web/src/components/FacilityList.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAS,MAAM,mBAAmB,CAAC;AACrF,OAAO,EAAE,YAAY,EAA2B,UAAU,EAAE,MAAM,kBAAkB,CAAC;AACrF,OAAO,KAAK,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACzE,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAErC,OAAO,SAAS,MAAM,cAAc,CAAC;AACrC,OAAO,WAAW,MAAM,sBAAsB,CAAC;AAC/C,OAAO,WAAW,MAAM,sBAAsB,CAAC;AAC/C,OAAO,EAAE,eAAe,EAAE,MAAM,YAAY,CAAC;AAC7C,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAC1C,OAAO,WAAW,MAAM,eAAe,CAAC;AACxC,OAAO,QAAQ,MAAM,YAAY,CAAC;AAOlC,IAAM,SAAS,GAAG,UAAU,CAAC,UAAC,KAAY;IACxC,OAAA,YAAY,CAAC;QACX,aAAa,EAAE;YACb,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3B,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;SAC/B;QACD,SAAS,EAAE;YACT,QAAQ,EAAE,CAAC;SACZ;QACD,MAAM,EAAE;YACN,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;SAC1B;KACF,CAAC;AAXF,CAWE,CACH,CAAC;AAEF,IAAM,qBAAqB,GAAG,UAAC,MAAe,IAAK,OAAA,oBAAC,SAAS,eAAK,MAAM,IAAE,KAAK,EAAC,gBAAgB,IAAG,EAAhD,CAAgD,CAAC;AAEpG,IAAM,qBAAqB,GAAG,UAAC,QAAkB,EAAE,WAAoC;IACrF,OAAO,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAY,EAAE,KAAa,IAAK,OAAA,oBAAC,QAAQ,eAAK,WAAW,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC,IAAE,IAAI,EAAE,IAAI,IAAI,EAApD,CAAoD,CAAC,CAAC;AAC7G,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO,WAAU,KAAY;IAClC,IAAM,OAAO,GAAG,SAAS,EAAE,CAAC;IAEpB,IAAA,qCAAc,EAAE,yCAAgB,CAAW;IAE7C,IAAA,gBAA6B,EAA5B,YAAI,EAAE,eAAsB,CAAC;IAC7B,IAAA,uBAAK,CAAiB;IAEvB,IAAA,iBAA8C,EAA7C,oBAAY,EAAE,uBAA+B,CAAC;IACrD,IAAM,aAAa,GAAG,WAAW,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;IACrD,IAAM,gBAAgB,GAAG,WAAW,CAAC,aAAa,CAAC,CAAC;IAE9C,IAAA,iBAAoD,EAAnD,kBAAU,EAAE,qBAAuC,CAAC;IAC3D,IAAM,cAAc,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;IAE/C,IAAM,YAAY,GAAG,UAAC,KAAa,EAAE,OAAe;QAClD,OAAO,CAAC,OAAO,CAAC,CAAC;IACnB,CAAC,CAAC;IAEF,IAAM,cAAc,GAAG,WAAW,CAAC,UAAA,KAAK,IAAI,OAAA,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAAnC,CAAmC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;IAEpG,IAAM,kBAAkB,GAAG,UAAC,CAAC,EAAE,KAAe;QAC5C,aAAa,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC,CAAC;IAEF,IAAM,eAAe,GAAG,OAAO,CAAC,cAAM,OAAA,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAvD,CAAuD,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;IAEhH,SAAS,CAAC;QACR,IAAI,aAAa,KAAK,gBAAgB,IAAI,UAAU,KAAK,cAAc,EAAE;YACvE,OAAO,CAAC,CAAC,CAAC,CAAC;SACZ;IACH,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC,CAAC;IAEhC,OAAO,CACL;QACE,oBAAC,IAAI,IAAC,SAAS,EAAE,OAAO,CAAC,aAAa,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,QAAC,OAAO,EAAC,eAAe,EAAC,UAAU,EAAC,UAAU;YACzG,oBAAC,IAAI,IAAC,IAAI,QAAC,SAAS,EAAE,OAAO,CAAC,SAAS;gBACrC,oBAAC,SAAS,IAAC,SAAS,QAAC,KAAK,EAAC,QAAQ,EAAC,KAAK,EAAE,YAAY,EAAE,QAAQ,EAAE,cAAc,GAAI,CAChF;YACP,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;gBAC7B,oBAAC,YAAY,IACX,QAAQ,QACR,KAAK,EAAE,UAAU,EACjB,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EACrC,qBAAqB,QACrB,UAAU,EAAE,qBAAqB,EACjC,WAAW,EAAE,qBAAqB,EAClC,QAAQ,EAAE,kBAAkB,GAC5B,CACG,CACF;QACP,oBAAC,KAAK,IACJ,KAAK,EAAE,eAAe,EACtB,WAAW,EAAC,cAAc,EAC1B,SAAS,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,UAAU,YAAA,EAAE,KAAK,OAAA,EAAE,MAAM,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,EAAE,IAElF,UAAC,EAAiB;gBAAf,oBAAO,EAAE,cAAI;YACf,IAAI,OAAoB,CAAC;YACzB,IAAI,MAAmB,CAAC;YAExB,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAEtB,IAAI,OAAO,EAAE;gBACX,OAAO,GAAG,oBAAC,WAAW,IAAC,KAAK,EAAE,KAAK,GAAI,CAAC;aACzC;iBAAM,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;gBAC5B,IAAA,oBAAkC,EAAhC,gBAAK,EAAE,gBAAyB,CAAC;gBACzC,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;gBAE5C,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,UAAC,QAAkB,IAAK,OAAA,CAC1C,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAE;oBAC/C,oBAAC,YAAY,IACX,eAAe,EAAE,eAAe,EAChC,QAAQ,EAAE,QAAQ,EAClB,MAAM,EAAE,cAAc,EACtB,QAAQ,EAAE,gBAAgB,GAC1B,CACG,CACR,EAT2C,CAS3C,CAAC,CAAC;gBAEH,MAAM,GAAG,CACP,oBAAC,IAAI,IAAC,SAAS,QAAC,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,EAAC,QAAQ;oBACzD,oBAAC,UAAU,IAAC,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,GAAI,CAC/D,CACR,CAAC;aACH;YAED,OAAO,CACL;gBACE,oBAAC,IAAI,IAAC,SAAS,QAAC,OAAO,EAAE,CAAC,IACvB,OAAO,CACH;gBACN,MAAM,CACN,CACJ,CAAC;QACJ,CAAC,CACK,CACP,CACJ,CAAC;AACJ,CAAC","sourcesContent":["import { createStyles, Grid, makeStyles, TextField, Theme } from '@material-ui/core';\r\nimport { Autocomplete, AutocompleteGetTagProps, Pagination } from '@material-ui/lab';\r\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport Facility from '../../typings/Facility';\r\nimport constants from '../constants';\r\nimport useDebounce from '../hooks/useDebounce';\r\nimport usePrevious from '../hooks/usePrevious';\r\nimport { LIST_FACILITIES } from '../queries';\r\nimport FacilityCard from './FacilityCard';\r\nimport LoadingGrid from './LoadingGrid';\r\nimport SizeChip from './SizeChip';\r\n\r\ninterface Props {\r\n  onEditFacility: (facility: Facility) => void;\r\n  onRemoveFacility: (facility: Facility) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    searchSection: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(2)\r\n    },\r\n    searchBox: {\r\n      flexGrow: 1\r\n    },\r\n    footer: {\r\n      padding: theme.spacing(2)\r\n    }\r\n  })\r\n);\r\n\r\nconst renderSizeFilterInput = (params: unknown) => <TextField {...params} label=\"Filter by size\" />;\r\n\r\nconst renderSizeFilterValue = (selected: string[], getTagProps: AutocompleteGetTagProps) => {\r\n  return selected.map((size: string, index: number) => <SizeChip {...getTagProps({ index })} size={size} />);\r\n};\r\n\r\nexport default function(props: Props) {\r\n  const classes = useStyles();\r\n\r\n  const { onEditFacility, onRemoveFacility } = props;\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [limit] = useState(21);\r\n\r\n  const [searchFilter, setSearchFilter] = useState('');\r\n  const dSearchFilter = useDebounce(searchFilter, 300);\r\n  const prevSearchFilter = usePrevious(dSearchFilter);\r\n\r\n  const [sizeFilter, setSizeFilter] = useState<string[]>([]);\r\n  const prevSizeFilter = usePrevious(sizeFilter);\r\n\r\n  const onPageChange = (event: object, pageNum: number) => {\r\n    setPage(pageNum);\r\n  };\r\n\r\n  const onSearchChange = useCallback(event => setSearchFilter(event.target.value), [setSearchFilter]);\r\n\r\n  const onSizeFilterChange = (_, value: string[]) => {\r\n    setSizeFilter(value);\r\n  };\r\n\r\n  const filterTextRegex = useMemo(() => (dSearchFilter ? new RegExp(dSearchFilter, 'i') : null), [dSearchFilter]);\r\n\r\n  useEffect(() => {\r\n    if (dSearchFilter !== prevSearchFilter || sizeFilter !== prevSizeFilter) {\r\n      setPage(1);\r\n    }\r\n  }, [dSearchFilter, sizeFilter]);\r\n\r\n  return (\r\n    <>\r\n      <Grid className={classes.searchSection} spacing={3} container justify=\"space-between\" alignItems=\"flex-end\">\r\n        <Grid item className={classes.searchBox}>\r\n          <TextField fullWidth label=\"Search\" value={searchFilter} onChange={onSearchChange} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          <Autocomplete\r\n            multiple\r\n            value={sizeFilter}\r\n            options={Object.keys(constants.SIZES)}\r\n            filterSelectedOptions\r\n            renderTags={renderSizeFilterValue}\r\n            renderInput={renderSizeFilterInput}\r\n            onChange={onSizeFilterChange}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Query\r\n        query={LIST_FACILITIES}\r\n        fetchPolicy=\"network-only\"\r\n        variables={{ filter: dSearchFilter, sizeFilter, limit, offset: (page - 1) * limit }}\r\n      >\r\n        {({ loading, data }) => {\r\n          let content: JSX.Element;\r\n          let footer: JSX.Element;\r\n\r\n          window.scrollTo(0, 0);\r\n\r\n          if (loading) {\r\n            content = <LoadingGrid count={limit} />;\r\n          } else if (data && data.facilities) {\r\n            const { items, total } = data.facilities;\r\n            const pageCount = Math.round(total / limit);\r\n\r\n            content = items.map((facility: Facility) => (\r\n              <Grid item lg={4} sm={6} xs={12} key={facility.id}>\r\n                <FacilityCard\r\n                  filterTextRegex={filterTextRegex}\r\n                  facility={facility}\r\n                  onEdit={onEditFacility}\r\n                  onRemove={onRemoveFacility}\r\n                />\r\n              </Grid>\r\n            ));\r\n\r\n            footer = (\r\n              <Grid container className={classes.footer} justify=\"center\">\r\n                <Pagination count={pageCount} page={page} onChange={onPageChange} />\r\n              </Grid>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <>\r\n              <Grid container spacing={3}>\r\n                {content}\r\n              </Grid>\r\n              {footer}\r\n            </>\r\n          );\r\n        }}\r\n      </Query>\r\n    </>\r\n  );\r\n}\r\n"]}]}